{"version":3,"file":"static/js/8.6c2f9d71.chunk.js","mappings":"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","sources":["utils/firebase-config.jsx","utils/url-helper.js","utils/credential.js","views/layouts/panel/layout.jsx","views/pages/project-canvas.jsx"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB3giGXUMCjHRk0XEILfrER2C1Y0CW4f7g\",\n  authDomain: \"crud-generator-1d538.firebaseapp.com\",\n  projectId: \"crud-generator-1d538\",\n  storageBucket: \"crud-generator-1d538.appspot.com\",\n  messagingSenderId: \"488917621676\",\n  appId: \"1:488917621676:web:f2033cb973d031fdcdb809\"\n};\n\n// Initialize Firebase\nconst firebaseConf = initializeApp(firebaseConfig);\n\nexport default firebaseConf;\n// Now you can use Firebase services in your React app!","\n\nexport default class UrlHelper {\n    static basename = \"/crud-generator\"\n\n    static urlWrapper(url) {\n        if (process.env.NODE_ENV === 'development') {\n            return `${this.basename}${url}`\n        } else if (process.env.NODE_ENV === 'production') {\n            return `${this.basename}${url}` \n        }\n    }   \n}","import Constant from \"./constant\"\n\nexport default class Credentials {\n\n    static set = (data) => {\n        localStorage.setItem('credentials', data)\n    }\n\n    static get = () => {\n        const credentials = JSON.parse(localStorage.getItem(Constant.credentialKey))\n\n        return credentials\n    }\n\n    static clear = () => {\n        localStorage.removeItem(Constant.credentialKey)\n\n        return true\n    }\n}","import { Link } from 'react-router-dom';\nimport Constant from '../../../utils/constant';\nimport Credentials from '../../../utils/credential';\nimport styled from 'styled-components';\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useState } from 'react';\nimport UrlHelper from '../../../utils/url-helper';\n\nexport default function PanelLayout(props) {\n\n  const [showModalCredential, setShowModalCredential] = useState(false)\n  const [signOutLoading, setSignOutLoading] = useState(false)\n  const handleCloseModalCredential = () => setShowModalCredential(false)\n  const handleShowModalCredential = () => setShowModalCredential(true)\n\n  const handleSignOut = () => {\n    setSignOutLoading(true)\n\n    setTimeout(() => {\n      if (Credentials.clear()) {\n        setShowModalCredential(false)\n        setSignOutLoading(false)\n\n        window.location.href = UrlHelper.urlWrapper(\"/\")\n      }\n    }, 2000);\n  }\n\n  const CardCredential = styled.div`\n    border-radius: 12px;\n    &:hover {\n      cursor: pointer;\n      filter: brightness(85%);\n    }\n  `\n\n  return (\n    <div>\n      <div class=\"page\">\n        <aside class=\"navbar navbar-vertical navbar-expand-lg\" data-bs-theme=\"dark\">\n          <div class=\"container-fluid\">\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#sidebar-menu\"\n              aria-controls=\"sidebar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <h1 class=\"navbar-brand navbar-brand-autodark\">\n              <a href=\".\">\n                <img src={process.env.PUBLIC_URL + '/logo-fullsize.png'} width=\"110\" alt={Constant.appName} class=\"\" />\n              </a>\n            </h1>\n            <div class=\"navbar-nav flex-row d-lg-none\">\n              <div class=\"nav-item d-none d-lg-flex me-3\">\n                <div class=\"btn-list\">\n                  <a href=\"https://github.com/tabler/tabler\" class=\"btn\" target=\"_blank\" rel=\"noreferrer\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\"\n                      viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                      stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                      <path\n                        d=\"M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5\" />\n                    </svg>\n                    Source code\n                  </a>\n                  <a href=\"https://github.com/sponsors/codecalm\" class=\"btn\" target=\"_blank\" rel=\"noreferrer\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon text-pink\" width=\"24\" height=\"24\"\n                      viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                      stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                      <path\n                        d=\"M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572\" />\n                    </svg>\n                    Sponsor\n                  </a>\n                </div>\n              </div>\n              <div class=\"d-none d-lg-flex\">\n                <a href=\"?theme=dark\" class=\"nav-link px-0 hide-theme-dark\" title=\"Enable dark mode\"\n                  data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\"\n                    viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <path\n                      d=\"M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z\" />\n                  </svg>\n                </a>\n                <a href=\"?theme=light\" class=\"nav-link px-0 hide-theme-light\" title=\"Enable light mode\"\n                  data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\"\n                    viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <path d=\"M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0\" />\n                    <path\n                      d=\"M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7\" />\n                  </svg>\n                </a>\n                <div class=\"nav-item dropdown d-none d-md-flex me-3\">\n                  <a href=\"#\" class=\"nav-link px-0\" data-bs-toggle=\"dropdown\" tabindex=\"-1\"\n                    aria-label=\"Show notifications\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\"\n                      viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                      stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                      <path\n                        d=\"M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6\" />\n                      <path d=\"M9 17v1a3 3 0 0 0 6 0v-1\" />\n                    </svg>\n                    <span class=\"badge bg-red\"></span>\n                  </a>\n                  <div class=\"dropdown-menu dropdown-menu-arrow dropdown-menu-end dropdown-menu-card\">\n                    <div class=\"card\">\n                      <div class=\"card-header\">\n                        <h3 class=\"card-title\">Last updates</h3>\n                      </div>\n                      <div class=\"list-group list-group-flush list-group-hoverable\">\n                        <div class=\"list-group-item\">\n                          <div class=\"row align-items-center\">\n                            <div class=\"col-auto\"><span\n                              class=\"status-dot status-dot-animated bg-red d-block\"></span>\n                            </div>\n                            <div class=\"col text-truncate\">\n                              <a href=\"#\" class=\"text-body d-block\">Example 1</a>\n                              <div class=\"d-block text-muted text-truncate mt-n1\">\n                                Change deprecated html tags to text decoration classes (#29604)\n                              </div>\n                            </div>\n                            <div class=\"col-auto\">\n                              <a href=\"#\" class=\"list-group-item-actions\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon text-muted\"\n                                  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\"\n                                  stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\">\n                                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                  <path\n                                    d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z\" />\n                                </svg>\n                              </a>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"list-group-item\">\n                          <div class=\"row align-items-center\">\n                            <div class=\"col-auto\"><span class=\"status-dot d-block\"></span></div>\n                            <div class=\"col text-truncate\">\n                              <a href=\"#\" class=\"text-body d-block\">Example 2</a>\n                              <div class=\"d-block text-muted text-truncate mt-n1\">\n                                justify-content:between ⇒ justify-content:space-between (#29734)\n                              </div>\n                            </div>\n                            <div class=\"col-auto\">\n                              <a href=\"#\" class=\"list-group-item-actions show\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon text-yellow\"\n                                  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\"\n                                  stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\">\n                                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                  <path\n                                    d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z\" />\n                                </svg>\n                              </a>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"list-group-item\">\n                          <div class=\"row align-items-center\">\n                            <div class=\"col-auto\"><span class=\"status-dot d-block\"></span></div>\n                            <div class=\"col text-truncate\">\n                              <a href=\"#\" class=\"text-body d-block\">Example 3</a>\n                              <div class=\"d-block text-muted text-truncate mt-n1\">\n                                Update change-version.js (#29736)\n                              </div>\n                            </div>\n                            <div class=\"col-auto\">\n                              <a href=\"#\" class=\"list-group-item-actions\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon text-muted\"\n                                  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\"\n                                  stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\">\n                                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                  <path\n                                    d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z\" />\n                                </svg>\n                              </a>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"list-group-item\">\n                          <div class=\"row align-items-center\">\n                            <div class=\"col-auto\"><span\n                              class=\"status-dot status-dot-animated bg-green d-block\"></span>\n                            </div>\n                            <div class=\"col text-truncate\">\n                              <a href=\"#\" class=\"text-body d-block\">Example 4</a>\n                              <div class=\"d-block text-muted text-truncate mt-n1\">\n                                Regenerate package-lock.json (#29730)\n                              </div>\n                            </div>\n                            <div class=\"col-auto\">\n                              <a href=\"#\" class=\"list-group-item-actions\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon text-muted\"\n                                  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\"\n                                  stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\">\n                                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                  <path\n                                    d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z\" />\n                                </svg>\n                              </a>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"nav-item dropdown\">\n                <a href=\"#\" class=\"nav-link d-flex lh-1 text-reset p-0\" data-bs-toggle=\"dropdown\"\n                  aria-label=\"Open user menu\">\n                  <span class=\"avatar avatar-sm\"\n                    style={{}}></span>\n                  <div class=\"d-none d-xl-block ps-2\">\n                    <div>Paweł Kuna</div>\n                    <div class=\"mt-1 small text-muted\">UI Designer</div>\n                  </div>\n                </a>\n                <div class=\"dropdown-menu dropdown-menu-end dropdown-menu-arrow\">\n                  <a href=\"#\" class=\"dropdown-item\">Status</a>\n                  <a href=\"./profile.html\" class=\"dropdown-item\">Profile</a>\n                  <a href=\"#\" class=\"dropdown-item\">Feedback</a>\n                  <div class=\"dropdown-divider\"></div>\n                  <a href=\"./settings.html\" class=\"dropdown-item\">Settings</a>\n                  <a href=\"./sign-in.html\" class=\"dropdown-item\">Logout</a>\n                </div>\n              </div>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"sidebar-menu\">\n              <ul class=\"navbar-nav pt-lg-3\">\n                <li class=\"nav-item m-3\">\n                  <CardCredential className='border border-opacity-25 border-secondary' onClick={handleShowModalCredential}>\n                    <div className=\"d-flex align-items-center p-3 gap-2\">\n                      <div className='flex-shrink-0'>\n                        <img className='rounded-5' src={`https://ui-avatars.com/api/?background=0D8ABC&color=fff&name=${Credentials.get().fullname}`} alt=\"\" style={{ width: '40px' }} />\n                      </div>\n                      <div className='d-flex flex-column'>\n                        <h4 className='fw-bolder m-0 p-0'>{Credentials.get().fullname}</h4>\n                        <p className='m-0 p-0'>{Credentials.get().organization}</p>\n                      </div>\n                    </div>\n                  </CardCredential>\n                </li>\n                <li class=\"nav-item m-4\">\n                  <Link class=\"btn btn-lg btn-light rounded-pill fw-bold\" to=\"/project-canvas\">\n                    <i class=\"bi bi-plus-lg force-bi-bold-1 me-2\"></i>\n                    Create\n                  </Link>\n                </li>\n                <li class=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/dashboard\">\n                    <span\n                      class=\"nav-link-icon d-md-none d-lg-inline-block\">\n                      <i class=\"bi bi-columns-gap\"></i>\n                      {/* <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\"\n                        viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                        stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                        <path d=\"M5 12l-2 0l9 -9l9 9l-2 0\" />\n                        <path d=\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\" />\n                        <path d=\"M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6\" />\n                      </svg> */}\n                    </span>\n                    <span class=\"nav-link-title\">\n                      Dashboard\n                    </span>\n                  </Link>\n                </li>\n                <li class=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/project-canvas\">\n                    <span\n                      class=\"nav-link-icon d-md-none d-lg-inline-block\">\n                      <i class=\"bi bi-file-earmark-code\"></i>\n                    </span>\n                    <span class=\"nav-link-title\">\n                      Project\n                    </span>\n                  </Link>\n                </li>\n                {/* <li class=\"nav-item dropdown\">\n                  <a class=\"nav-link dropdown-toggle\" href=\"#navbar-extra\" data-bs-toggle=\"dropdown\"\n                    data-bs-auto-close=\"false\" role=\"button\" aria-expanded=\"false\">\n                    <span\n                      class=\"nav-link-icon d-md-none d-lg-inline-block\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\"\n                        viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\"\n                        stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                        <path\n                          d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z\" />\n                      </svg>\n                    </span>\n                    <span class=\"nav-link-title\">\n                      Extra\n                    </span>\n                  </a>\n                  <div class=\"dropdown-menu\">\n                    <div class=\"dropdown-menu-columns\">\n                      <div class=\"dropdown-menu-column\">\n                        <a class=\"dropdown-item\" href=\"./empty.html\">\n                          Project 1\n                        </a>\n                        <a class=\"dropdown-item\" href=\"./empty.html\">\n                          Project 2\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </li> */}\n              </ul>\n            </div>\n          </div>\n        </aside>\n\n        {props.children}\n\n        <Modal className='modal-modern modal-credential' show={showModalCredential} onHide={handleCloseModalCredential}>\n          <Modal.Header>\n            <Modal.Title className='mx-auto text-muted'>{Credentials.get().email}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={handleSignOut} className={`rounded-pill ${signOutLoading ? 'disabled' : ''}`}>\n              {signOutLoading ? 'Signin out...' : 'Sign out'}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n      </div>\n    </div>\n  )\n}","import React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport ReactDOM from \"react-dom\";\nimport ReactDOMServer from \"react-dom/server\";\nimport SampleProjectCanvasTemplateJson from '../../sample-project-canvas.json';\nimport { collection, addDoc, updateDoc, getDocs, getFirestore, query, where, db, doc, documentId } from \"firebase/firestore\";\nimport firebaseConf from '../../utils/firebase-config';\nimport * as bootstrap from '../../../node_modules/bootstrap/dist/js/bootstrap.bundle.js';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport PanelLayout from \"../layouts/panel/layout\";\nimport Constant from \"../../utils/constant.js\";\n\nclass ProjectCanvas extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            errorMessage: null,\n            isLoadingGeneratedResults: false,\n            loadingGeneratedResults: null,\n            results: [],\n            projectCanvas: {\n                createProjectFrom: null\n            },\n            blueprintFormHtmlString: \"\",\n            histories: {\n                isLoading: true,\n                data: []\n            }\n        }\n        this.handleImportProjectTemplate = this.handleImportProjectTemplate.bind(this)\n        this.handleStartCanvas = this.handleStartCanvas.bind(this)\n    }\n\n    renderCanvasFromState() {\n        if (this.state.projectCanvas['platform'] === undefined) {\n            return;\n        }\n\n        let blueprints = this.state.projectCanvas.blueprintForm\n        let totalRow = blueprints.length\n\n        function generateX(elm) {\n            // GENERATE DYNAMIC ATTRIBUTES\n            let dynamicAttributes = {}\n            for (const key in elm.attributes) {\n                if (elm.attributes.hasOwnProperty(key)) {\n                    if ((typeof elm.attributes[key]) != \"boolean\") {\n                        dynamicAttributes[key] = elm.attributes[key]\n                    } else {\n                        if (elm.attributes[key]) {\n                            dynamicAttributes[key] = elm.attributes[key]\n                        }\n                    }\n                }\n            }\n            // GENERATE DYNAMIC ATTRIBUTES\n\n            if (elm.tag == 'select') {\n                return <select {...dynamicAttributes}>\n                    {elm.options.map(opt => {\n                        return <option >{opt.label}</option>\n                    })}\n                </select>\n            }\n\n            if (elm.tag == 'input') {\n                return <input {...dynamicAttributes} />\n            }\n\n            if (elm.tag == 'textarea') {\n                return <textarea {...dynamicAttributes}></textarea>\n            }\n        }\n\n        return <div className=\"card\">\n            <div className=\"card-header\">\n                <div className=\"card-title\">Preview Form</div>\n            </div>\n            <div className=\"card-body\">\n                {blueprints.map(blp => {\n                    let explodingToColumn = Math.round(12 / totalRow)\n\n                    return <div className=\"row pseudo-row\">\n                        <div className=\"pseudo-row-button\" style={{ display: 'none' }}>\n                            <button className=\"btn btn-sm btn-primary\">Tambah</button>\n                            <button className=\"btn btn-sm btn-info\">Edit</button>\n                            <button className=\"btn btn-sm btn-danger\">Hapus</button>\n                        </div>\n\n                        <br /><br />\n                        {\n                            blp.map(elm => {\n                                return <div className={`form-group ${blp.length > 1 ? '' : 'pseudo-row'} ${blp.length > 1 ? 'col-md-' + explodingToColumn : ''} mb-3`}>\n                                    <label className=\"mb-1\" for={`${elm.attributes.id}`}>{elm.label}</label>\n                                    {generateX(elm)}\n                                </div>\n                            })}\n\n                    </div>\n                })}\n                {/* <div className=\"row pseudo-row\">\n                    <div className=\"pseudo-row-button\" style={{ display: 'none' }}>\n                        <button className=\"btn btn-sm btn-primary\">Tambah</button> \n                        <button className=\"btn btn-sm btn-info\">Edit</button>\n                         <button className=\"btn btn-sm btn-danger\">Hapus</button>\n                    </div> \n                    \n                    <br/><br/>\n                    {elements.map(elm => {\n                        return <div className={ `form-group ${elements.length > 1 ? '' : 'pseudo-row'} ${elements.length > 1 ? 'col-md-' + explodingToColumn : ''} mb-3` }>\n                            <label className=\"mb-1\" for={`${elm.attributes.id}`}>{elm.label}</label>\n                            {generateX(elm)}\n                        </div>\n                    })}\n                </div> */}\n            </div>\n            <div className=\"card-footer\">\n                <div className=\"card-title\">Preview Tree</div>\n                <div>\n                    <ul id=\"myUL\">\n                        {blueprints.map((blp, index) => {\n                            return <li><span class=\"caret\">{`Row ${index + 1}`}</span>\n                                <ul class=\"nested\">\n                                    {blp.map(elm => {\n                                        return <li>{elm.attributes.name}</li>\n                                    })}\n                                </ul>\n                            </li>\n                        })}\n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    }\n\n    generatePureHtmlFromState() {\n        if (this.state.projectCanvas['platform'] === undefined) {\n            return;\n        }\n\n        if (this.state.projectCanvas.crudType === 'api') {\n            return;\n        }\n\n        let blueprints = this.state.projectCanvas.blueprintForm\n        let inputs = blueprints.flat()\n        let totalRow = blueprints.length\n\n        function generateX(elm) {\n            // GENERATE DYNAMIC ATTRIBUTES\n            let dynamicAttributes = {}\n            for (const key in elm.attributes) {\n                if (elm.attributes.hasOwnProperty(key)) {\n                    if ((typeof elm.attributes[key]) != \"boolean\") {\n                        dynamicAttributes[key] = elm.attributes[key]\n                    } else {\n                        if (elm.attributes[key]) {\n                            dynamicAttributes[key] = elm.attributes[key]\n                        }\n                    }\n                }\n            }\n            // GENERATE DYNAMIC ATTRIBUTES\n\n            if (elm.tag == 'select') {\n                return <select {...dynamicAttributes}>\n                    {elm.options.map(opt => {\n                        return <option >{opt.label}</option>\n                    })}\n                </select>\n            }\n\n            if (elm.tag == 'input') {\n                return <input {...dynamicAttributes} />\n            }\n\n            if (elm.tag == 'textarea') {\n                return <textarea {...dynamicAttributes}></textarea>\n            }\n        }\n\n        const generateModal = (type) => {\n            let headerTitle = type == 'create' ? 'Tambah' : 'Ubah'\n            let footerTitle = type == 'create' ? 'Tambahkan' : 'Ubah'\n            let buttonStyle = type == 'create' ? 'btn btn-primary' : 'btn btn-warning'\n\n            return <div className=\"modal fade\" id={`modal-${type}`} tabindex=\"-1\" aria-labelledby={`${type}-modal-label`} aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <form id={`form-${type}`}>\n                            <div className=\"modal-header\">\n                                <h1 className=\"modal-title fs-5\" id={`${type}-modal-label`}>{headerTitle} data</h1>\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Tutup\"></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                {blueprints.map(blp => {\n                                    let explodingToColumn = Math.round(12 / totalRow)\n\n                                    return <div className=\"row\">{blp.map(elm => {\n                                        return <div className={`form-group${blp.length > 1 ? ' col-md-' + explodingToColumn + ' ' : ' '}mb-3`}>\n                                            <label className=\"mb-1\" for={elm.attributes.id}>{elm.label}</label>\n                                            {generateX(elm)}\n                                            <div id={`${elm.attributes.id}-msg`}></div>\n                                        </div>\n                                    })}</div>\n                                })}\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Batal</button>\n                                <button type=\"submit\" className={buttonStyle}>{footerTitle}</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        }\n\n        const generateIndexPage = () => {\n            let finalResult = ''\n\n            const generateTable = () => {\n\n                let generateColumn = () => {\n                    let result = ''\n                    inputs.map(input => {\n                        let orderable = ''\n                        if (input.attributes.type === 'number' || input.attributes.type === 'date') {\n                            orderable = 'data-orderable=\"true\"'\n                        } else {\n                            orderable = ''\n                        }\n                        result += `<th ${orderable}>{{ __('${input.attributes.name}') }}</th>`\n                    })\n\n                    return result\n                }\n\n                return `\n                    <div class=\"table-responsive\">\n                        <table id=\"table\" class=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th width=\"10%\">{{ __('No') }}</th>\n                                    ${generateColumn()}\n                                </tr>\n                            </thead>\n                            <tbody></tbody>\n                        </table>\n                    </div>\n                `\n            }\n\n            finalResult = generateTable()\n\n            return finalResult\n        }\n\n        const generateScript = () => {\n            let finalResult = ''\n\n            finalResult = `<script>\n                let formMode = 'create'\n            `\n\n            const datatable = () => {\n                let finalResult = ''\n\n                let generateColumn = () => {\n                    let result = ''\n                    inputs.map(input => {\n                        result += `{\n                                data: '${input.attributes.name}',\n                                name: '${input.attributes.name}'\n                            },`\n                    })\n\n                    return result\n                }\n\n                finalResult = `\n                    let table = $('#table').DataTable({\n                        processing: true,\n                        serverSide: true,\n                        responsive: true,\n                        ajax: \"{{ url()->current() }}\",\n                        lengthMenu: [10, 25, 50],\n                        columns: [{\n                                data: 'DT_RowIndex',\n                                name: 'DT_RowIndex'\n                            },\n                            ${generateColumn()}\n                            {\n                                data: 'actions',\n                                name: 'actions',\n                                orderable: false,\n                                searchable: false\n                            },\n                        ]\n                    })\n                `\n\n                return finalResult\n            }\n\n            const updateData = () => {\n                return `\n                    $('#table tbody').on('click', '.btn-update', function() {\n                        let id = $(this).data('id')\n                        let detail = $(this).data('detail')\n\n                        formMode = 'update'\n\n                        for (const key in detail) {\n                            if (detail.hasOwnProperty(key)) {\n                                $(\\`#update-\\${key}\\`).val(detail[key])\n                            }\n                        }\n                        $(\\`#modal-\\${formMode}\\`).modal('show')\n                    })\n                `\n            }\n\n            const createData = () => {\n                return `\n                    $('#form-create').submit(function(e) {\n                        e.preventDefault()\n\n                        let formData = new FormData(this)\n                        formData.append('_method', 'post')\n                        formData.append('_token', getCsrfToken())\n\n                        callApi(formData)\n                    })\n                `\n            }\n\n            const deleteData = () => {\n                return `\n                    $('#form-update').submit(function(e) {\n                        e.preventDefault()\n\n                        // fill id here...\n                        let id = $('#update-...').val()\n\n                        let formData = new FormData(this)\n                        formData.append('_method', 'put')\n                        formData.append('_token', getCsrfToken())\n\n                        callApi(formData, \\`{{ url()->current() }}/\\${id}\\`)\n                    })\n\n                    $('#table tbody').on('click', '.btn-delete', function() {\n                        let id = $(this).data('id')\n\n                        showSwalConfirm(\\`Hapus\\`, 'Hapus data?', 'warning', function(result) {\n                            if (result) {\n                                let formData = new FormData()\n                                formData.append('_method', 'delete')\n                                formData.append('_token', getCsrfToken())\n\n                                callApi(formData, \"{{ url()->current() }}\" + \"/\" + id)\n                            }\n                        })\n                    })\n                `\n            }\n\n            const callApi = () => {\n                return `\n                    function callApi(formData, url = null) {\n                        $.ajax({\n                            url: url == null ? \"{{ url()->current() }}\" : url,\n                            method: \"POST\",\n                            data: formData,\n                            dataType: \"JSON\",\n                            cache: false,\n                            contentType: false,\n                            processData: false,\n                            beforeSend: function() {\n                                clearValidationMessage(formMode, 'msg')\n                            },\n                            success: function(response) {\n                                $(\\`#form-\\${formMode}\\`).trigger('reset')\n                                $(\\`#modal-\\${formMode}\\`).modal('hide')\n                                formMode = 'create'\n                                showSwal(response.message, response.status)\n                                table.ajax.reload()\n                            },\n                            error: function(response) {\n                                if (response.status == 422) {\n                                    let error = response.responseJSON.errors\n                                    clearValidationMessage(formMode, 'msg')\n                                    validationMessageRender(error, formMode, 'msg')\n                                    return\n                                }\n\n                                showSwal(response.responseJSON.message, response.responseJSON.status)\n                            }\n                        })\n                    }\n                `\n            }\n\n            finalResult += datatable() + updateData() + deleteData() + callApi()\n\n            finalResult += `</script>`\n\n            return finalResult\n        }\n\n        let modalHtmlString = ReactDOMServer.renderToString(generateModal('create'))\n        modalHtmlString += ReactDOMServer.renderToString(generateModal('update'))\n        this.setState({ blueprintFormHtmlString: modalHtmlString })\n        this.setState((prevState, props) => ({\n            results: [...prevState.results, {\n                fileName: 'modal.blade.php',\n                description: '',\n                code: modalHtmlString,\n                language: 'html'\n            }]\n        }))\n\n        let indexHtmlString = generateIndexPage() + generateScript()\n        this.setState((prevState, props) => ({\n            results: [...prevState.results, {\n                fileName: 'index.blade.php',\n                description: '',\n                code: indexHtmlString,\n                language: 'html'\n            }]\n        }))\n    }\n\n    generateLogicFromState() {\n        if (this.state.projectCanvas['platform'] === undefined) {\n            return;\n        }\n\n        function generateDatatables(inputs) {\n            let finalResult\n\n            finalResult = `\n            // Get data here\n            $data = YourModel::all();\n\n            return DataTables::of($data)\n                ->addIndexColumn()\n                ->addColumn('actions', function ($row) {\n                    $btn = '';\n\n                    $btn .= '<a href=\"javascript:void(0)\" class=\"btn btn-outline-warning btn-sm btn-update me-1\" data-detail=\"' . htmlspecialchars($row) . '\"  data-id=' . $row->id . '><i class=\"bi bi-pencil-square\"></i> Edit</a>';\n\n                    $btn .= '<a href=\"javascript:void(0)\" class=\"btn btn-outline-danger btn-sm btn-delete\" data-id=' . $row->id . '><i class=\"bi bi-trash-fill\"></i> Delete</a>';\n\n                    return $btn;\n                })\n                ->rawColumns(['actions'])\n                ->make(true);\n            `\n\n            return finalResult\n        }\n\n        function generateValidation(inputs) {\n            let finalResult\n            let fieldAssignRules = `$validator = Validator::make($request->all(), [`\n\n            inputs.map(input => {\n                fieldAssignRules += `\\n    '${input.attributes.name}' => '${input.validation.rules}'`\n            })\n\n            fieldAssignRules += `\\n ]);`\n\n            let returnBackValidationFail = `\n            if ($validator->fails()) {\n                return response()->json([\n                    'status'    => 'error',\n                    'message'   => 'Ooopps',\n                    'errors'    => $validator->errors()\n                ], 422);\n            }\n            `\n\n            finalResult = fieldAssignRules + returnBackValidationFail\n\n            return finalResult\n        }\n\n        const generateIndex = () => {\n            let finalResult = ``\n\n            if (this.state.projectCanvas.crudType === 'api') {\n                finalResult += `\n                return return response()->json([\n                    'status'    => 'success',\n                    'message'   => 'Berhasil menampilkan data',\n                    'data'      => YourModel::paginate(10)\n                ], 200);\n                `\n            } else if (this.state.projectCanvas.crudType === 'modal') {\n                finalResult += `\n                if ($request->ajax()) {\n                    ${generateDatatables(this.state.projectCanvas.blueprintForm.flat())}\n                }\n\n                $data['title'] = $this->title;\n                $data['subtitle'] = $this->subtitle;\n\n                return view('admin.master.${this.state.projectCanvas.titleProject.toLowerCase()}.index', $data);\n                `\n            }\n\n            return finalResult\n        }\n\n        function generateCreateData(inputs) {\n            let finalResult = ``\n\n            let uploadFile = (inputs) => {\n                let result = ``\n\n                inputs.map(input => {\n                    if (input.attributes.type === 'file' && input.storePath !== null) {\n                        result += `\\n $validator['${input.attributes.name}'] = $request->file('${input.attributes.name}')->store('${input.storePath}');`\n                    }\n                })\n\n                return result\n            }\n\n\n            finalResult += `try {\n                $validator = $request->all();\n                \n                ${uploadFile(inputs)}\n                \n                // Inserting data....\n                YourModel::create($validator);\n                \n                // Create logging here....\n                Helper::insertLog(\"Menambahkan data $this->title\");\n\n                return response()->json([\n                    'status'    => 'success',\n                    'message'   => 'Berhasil menambah data',\n                    'data'      => null\n                ], 201);\n                \n            } catch (Exception $e) {\n                return response()->json([\n                    'status'    => 'error',\n                    'message'   => 'Gagal menambah data, ' . $e->getMessage(),\n                    'data'      => null\n                ], 500);\n            }\n`\n\n            return finalResult\n        }\n\n        function hasFile(inputs) {\n            let hasFileExist = false\n\n            inputs.map(input => {\n                if (input.attributes.type === 'file' && input.storePath !== null) {\n                    hasFileExist = true\n                }\n            })\n\n            return hasFileExist\n        }\n\n        function generateUpdateData(inputs) {\n            let finalResult = ``\n\n            let uploadFile = (inputs) => {\n                let result = ``\n\n                inputs.map(input => {\n                    if (input.attributes.type === 'file' && input.storePath !== null) {\n                        result += `\\n $validator['${input.attributes.name}'] = $request->file('${input.attributes.name}')->store('${input.storePath}');`\n                    }\n                })\n\n                return result\n            }\n\n            let deleteFile = (inputs) => {\n                let result = ``\n\n                inputs.map(input => {\n                    if (input.attributes.type === 'file' && input.storePath !== null) {\n                        result += `Storage::delete($old_data->${input.attributes.name});`\n                    }\n                })\n\n                return result\n            }\n\n            finalResult += `try {\n                $validator = $request->all();\n\n                // getting old data\n                $old_data = YourModel::find($id);\n\n                // update data here....\n                YourModel::find($id)->update($validator);\n\n                // update file...\n                ${uploadFile(inputs)}\n\n                // delete old file\n                ${deleteFile(inputs)}\n\n                // update log...\n                Helper::insertLog(\"Mengubah data $this->title\");\n\n                return response()->json([\n                    'status'    => 'success',\n                    'message'   => 'Berhasil mengubah data',\n                    'data'      => null\n                ], 200);\n            } catch (Exception $e) {\n                return response()->json([\n                    'status'    => 'error',\n                    'message'   => 'Gagal mengubah data, ' . $e->getMessage(),\n                    'data'      => null\n                ], 500);\n            }`\n\n            return finalResult\n        }\n\n        // header class\n        let mainLogic =\n            `<?php\n\n        /*\n            This code is generated by crud-generator.beta.dimasnugroho673.github.io\n            @https://github.com/dimasnugroho673\n            \n            This generator using beta version, still check and test your code before paste to production\n        */\n\n        namespace App\\\\Http\\\\Controllers\\\\Master;\n\n        use Exception;\n        use App\\\\Helpers\\\\Helper;\n        use Illuminate\\\\Http\\\\Request;\n        use App\\\\Http\\\\Controllers\\\\Controller;\n        ${hasFile(this.state.projectCanvas.blueprintForm.flat()) ? 'use Illuminate\\\\Support\\\\Facades\\\\Storage;' : ''}\n        use Yajra\\\\DataTables\\\\DataTables;\n        use Illuminate\\\\Support\\\\Facades\\\\Validator;\n        use App\\\\Models\\\\YourModel;\n\n        // insert your dependency namespace here....\n\n        class ${this.state.projectCanvas.titleProject}Controller extends Controller {\n\n            private $title = \"${this.state.projectCanvas.titleProject}\";\n            private $subtitle = \"Master ${this.state.projectCanvas.titleProject}\";\n\n            public function index(Request $request) { \n               ${generateIndex()}\n            }\n\n            public function store(Request $request) {\n                ${generateValidation(this.state.projectCanvas.blueprintForm.flat())}   \n\n                ${generateCreateData(this.state.projectCanvas.blueprintForm.flat())}\n            }\n\n            public function update(Request $request, $id) {\n                ${generateValidation(this.state.projectCanvas.blueprintForm.flat())}\n\n                ${generateUpdateData(this.state.projectCanvas.blueprintForm.flat())}\n            }\n\n            public function destroy($id) {\n                try {\n                    // getting old data\n                    $old_data = YourModel::find($id);\n\n                    // delete data here....\n                    YourModel::destroy($id);\n\n                    // delete unneccessary file...\n                    // Storage::delete(path....);\n\n                    // update log...\n                    Helper::insertLog(\"Menghapus data $this->title\");\n\n                    return response()->json([\n                        'status'    => 'success',\n                        'message'   => 'Berhasil menghapus data',\n                        'data'      => null\n                    ], 200);\n                } catch (Exception $e) {\n                    return response()->json([\n                        'status'    => 'error',\n                        'message'   => 'Gagal menghapus data, ' . $e->getMessage(),\n                        'data'      => null\n                    ], 500);\n                }\n            }\n        }`\n\n        // finalResults.push(mainLogic)\n        this.setState((prevState, props) => ({\n            results: [...prevState.results, {\n                fileName: this.generateFilename(this.state.projectCanvas.platform, 'controller'),\n                description: '',\n                code: mainLogic,\n                language: 'php'\n            }]\n        }))\n        // return <textarea className=\"form-control\" rows={10} cols={30}>{mainLogic}</textarea>\n        // finalResults.map(separated => {\n        //     return <textarea className=\"form-control\" rows={10} cols={30}>{separated}</textarea>\n        // })\n    }\n\n    // generateViewFromState() {\n    //     return <div>\n    //         <div className=\"mb-3\">\n    //             <label htmlFor=\"\">modal.blade.php</label>\n    //             <textarea className=\"form-control\" rows={10} cols={30}>{this.state.blueprintFormHtmlString}</textarea>\n    //         </div>\n    //     </div>\n    // }\n\n    componentDidMount() {\n        // this.renderCanvasFromState()\n        // generateCanvas()\n\n        this.setState({ loadingGeneratedResults: this.fragmentMakeMeAwesome() })\n        this.fetchHistory()\n    }\n\n    handleImportProjectTemplate(type, e) {\n        console.log(e)\n    }\n\n    async fetchHistory() {\n        const database = getFirestore(firebaseConf)\n        return await getDocs(query(collection(database, \"histories\"), where(\"userId\", \"==\", JSON.parse(localStorage.getItem('credentials')).userId)))\n            .then((snapshot) => {\n                let snapshotHistories = []\n                snapshot.docs.map(data => {\n                    snapshotHistories.push(data.data())\n                })\n\n                let newHistories = {\n                    isLoading: false,\n                    data: snapshotHistories\n                }\n\n                console.log(newHistories)\n\n                this.setState({ histories: newHistories })\n            })\n    }\n\n    async sendDatAnalytic() {\n        try {\n            const database = getFirestore(firebaseConf)\n            const addHistory = await addDoc(collection(database, \"histories\"), {\n                templateVersion: this.state.projectCanvas.templateVersion,\n                titleProject: this.state.projectCanvas.titleProject,\n                platform: this.state.projectCanvas.platform,\n                crudType: this.state.projectCanvas.crudType,\n                createProjectFrom: this.state.projectCanvas.createProjectFrom,\n                payload: JSON.stringify(this.state.projectCanvas),\n                userId: JSON.parse(localStorage.getItem('credentials')).userId,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            })\n            // console.log(\"Document written with ID: \", addHistory.id)\n\n            await getDocs(query(collection(database, \"histories_per_platform\"), where(documentId(), \"==\", this.state.projectCanvas.platform)))\n                .then((snapshot) => {\n                    if (snapshot.docs.length >= 1) {\n                        let data = snapshot.docs[0].data()\n                        data.historiesDocId.push(addHistory.id)\n\n                        updateDoc(doc(database, \"histories_per_platform\", this.state.projectCanvas.platform), {\n                            count: data.count + 1,\n                            historiesDocId: data.historiesDocId\n                        })\n                    }\n                })\n\n            // const addHistoryPerPlatform = await updateDoc(doc(database, \"histories_per_platform\", this.state.projectCanvas.platform), { \n            //     count: Subject \n            // })\n\n            // const addHistoryPerPlatform = await addDoc(collection(database, \"histories_per_platform\"), {\n            //     templateVersion: this.state.projectCanvas.templateVersion,\n            //     titleProject: this.state.projectCanvas.titleProject,\n            //     platform: this.state.projectCanvas.platform,\n            //     crudType: this.state.projectCanvas.crudType,\n            //     createProjectFrom: this.state.projectCanvas.createProjectFrom,\n            //     createdAt: new Date(),\n            //     updatedAt: new Date()\n            // })\n            // console.log(\"Document written with ID: \", addHistoryPerPlatform.id)\n\n\n        } catch (e) {\n            console.error(\"Error adding document: \", e)\n        }\n    }\n\n    handleStartCanvas(isPreview, sourcePreview) {\n        if (isPreview) {\n            try {\n                let sourceTemplate = JSON.parse(sourcePreview)\n\n                this.setState({ projectCanvas: sourceTemplate }, () => {\n                    this.generatePureHtmlFromState()\n                    this.generateLogicFromState()\n                })\n            } catch (error) {\n                alert('Validating JSON failed: ' + error.message)\n            }\n        } else {\n            this.setState({ isLoadingGeneratedResults: true })\n\n            let sourceTemplate\n            if (this.state.projectCanvas.createProjectFrom === 'import_text') {\n                this.setState({ loadingGeneratedResults: this.fragmentGeneratingResult('Validating JSON...') })\n\n                setTimeout(() => {\n                    try {\n                        sourceTemplate = document.querySelector('#create-import_text').value\n\n                        sourceTemplate = JSON.parse(sourceTemplate)\n                        sourceTemplate['createProjectFrom'] = 'import_text'\n\n                        setTimeout(() => {\n                            this.setState({ projectCanvas: sourceTemplate }, () => {\n                                this.generatePureHtmlFromState()\n                                this.generateLogicFromState()\n                                this.sendDatAnalytic()\n                            })\n                        }, 2000)\n                    } catch (error) {\n                        alert('Validating JSON failed: ' + error.message)\n                    } finally {\n                        document.querySelector('#modal-create-project .btn-close').click()\n\n                        this.setState({ isLoadingGeneratedResults: false })\n                        this.setState({ loadingGeneratedResults: this.fragmentMakeMeAwesome() })\n                    }\n                }, 500)\n\n            } else if (this.state.projectCanvas.createProjectFrom === 'import_file') {\n                sourceTemplate = document.getElementById(\"create-import_file\").files[0]\n\n                this.setState({ loadingGeneratedResults: this.fragmentGeneratingResult('Validating JSON...') })\n\n                if (sourceTemplate) {\n                    setTimeout(() => {\n                        let reader = new FileReader()\n\n                        reader.readAsText(sourceTemplate, \"UTF-8\")\n                        reader.onload = (e) => {\n                            sourceTemplate = JSON.parse(e.target.result)\n                            sourceTemplate['createProjectFrom'] = 'import_file'\n\n                            this.setState({ projectCanvas: sourceTemplate }, () => {\n                                this.generatePureHtmlFromState()\n                                this.generateLogicFromState()\n                                this.sendDatAnalytic()\n                            })\n\n                            this.setState({ isLoadingGeneratedResults: false })\n\n                            document.querySelector('#modal-create-project .btn-close').click()\n                        }\n                        reader.onerror = (e) => {\n                            console.error('error read file json: ', e.target.result)\n                            // document.getElementById(\"fileContents\").innerHTML = \"error reading file\";\n                        }\n                    }, 2000)\n                }\n            }\n        }\n\n\n    }\n\n    handleEndCanvas() {\n        const confirmEnd = window.confirm('Are you sure to delete this canvas?')\n\n        if (confirmEnd) {\n            this.resetCanvas()\n            this.fetchHistory()\n            alert('Canvas has been deleted!')\n        }\n\n        return\n    }\n\n    resetCanvas() {\n        this.setState({\n            errorMessage: null,\n            isLoadingGeneratedResults: false,\n            loadingGeneratedResults: this.fragmentMakeMeAwesome(),\n            results: [],\n            projectCanvas: {\n                createProjectFrom: null\n            },\n            blueprintFormHtmlString: \"\"\n        })\n\n        document.getElementById('form-create_project').reset()\n    }\n\n    // copy button\n    copyCode = (code) => {\n        const copy = () => {\n            const textField = document.createElement('textarea');\n            textField.innerText = code;\n            document.body.appendChild(textField);\n            textField.select();\n            document.execCommand('copy');\n            textField.remove();\n\n            // Alert the copied text\n            alert(\"Success copy code\");\n        }\n\n        return <div>\n            <button className=\"btn btn-sm btn-primary px-2 py-1\" onClick={e => copy()}><i class=\"bi bi-copy me-1\"></i> Copy</button>\n        </div>\n    }\n\n    // final results\n    renderFinalResults() {\n        return this.state.results.map(piece => {\n            return <div className=\"form-group mb-3\">\n                <label htmlFor=\"\">{piece.fileName}</label>\n                <SyntaxHighlighter language={piece.language} style={solarizedlight} showLineNumbers>\n                    {piece.code}\n                </SyntaxHighlighter>\n                {this.copyCode(piece.code)}\n            </div>\n            // return <div className=\"form-group mb-3\">\n            //     <label htmlFor=\"\">{piece.fileName}</label>\n            //     <textarea className=\"form-control\" rows={10} cols={30}>{piece.code}</textarea>\n            //     <button className=\"btn btn-sm btn-primary mt-2\">Download file</button>\n            // </div>\n        })\n    }\n\n    // small func\n    generateFilename(platform, typePattern) { // typePattern like controlller, view, model, service, etc....\n        if (platform === 'php-laravel8_9') {\n            if (typePattern === 'controller') {\n                return this.state.projectCanvas.titleProject + 'Controller.php'\n            }\n\n            if (typePattern === 'view') {\n\n            }\n        }\n\n    }\n\n    fragmentMakeMeAwesome() {\n        return <div><i class=\"bi bi-stars me-2\"></i> Make me awesome</div>\n    }\n\n    fragmentGeneratingResult(text) {\n        return <div>{text}</div>\n    }\n\n    renderHistoriesRow() {\n\n    }\n\n    render() {\n        return (\n            <PanelLayout>\n                <div className=\"page-wrapper\">\n                    <div className=\"page-header d-print-none\">\n                        <div className=\"container-xl\">\n                            <div className=\"row g-2 align-items-center\">\n                                <div className=\"col\">\n\n                                    <div className=\"page-pretitle\">\n                                        Project\n                                    </div>\n                                    <h2 className=\"page-title\">\n                                        Canvas\n                                    </h2>\n                                </div>\n\n                                <div className=\"col-auto ms-auto d-print-none\">\n                                    <div className=\"btn-list\">\n                                        <a href=\"#\" className={`btn btn-primary d-none d-sm-inline-block ${this.state.results.length >= 1 ? 'disabled' : ''}`} data-bs-toggle=\"modal\"\n                                            data-bs-target=\"#modal-create-project\">\n                                            {this.state.results.length >= 1 ? 'End canvas to create new project' : <>\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon\" width=\"24\" height=\"24\"\n                                                    viewBox=\"0 0 24 24\" strokeWidth={\"2\"} stroke=\"currentColor\" fill=\"none\"\n                                                    strokeLinecap={\"round\"} strokeLinejoin={\"round\"}>\n                                                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                                    <path d=\"M12 5l0 14\" />\n                                                    <path d=\"M5 12l14 0\" />\n                                                </svg> Create project\n                                            </>\n                                            }\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"page-body\">\n                        <div className=\"container-xl\">\n                            <div className=\"row row-deck row-cards\">\n                                <div class=\"alert alert-warning\" role=\"alert\">\n                                    This project now beta version and only support for CRUD master data.  Consider to use this tools for boosting workflow development, and still recheck manually result generated code.\n                                </div>\n\n                                {this.state.histories.data.length == 0 ? (\n                                    <div className=\"text-center\" style={{ marginTop: \"100px\" }}>\n                                        <svg className=\"mb-3\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" width=\"200px\" height=\"200px\" viewBox=\"0 0 647.63626 632.17383\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M687.3279,276.08691H512.81813a15.01828,15.01828,0,0,0-15,15v387.85l-2,.61005-42.81006,13.11a8.00676,8.00676,0,0,1-9.98974-5.31L315.678,271.39691a8.00313,8.00313,0,0,1,5.31006-9.99l65.97022-20.2,191.25-58.54,65.96972-20.2a7.98927,7.98927,0,0,1,9.99024,5.3l32.5498,106.32Z\" transform=\"translate(-276.18187 -133.91309)\" fill=\"#f2f2f2\" /><path d=\"M725.408,274.08691l-39.23-128.14a16.99368,16.99368,0,0,0-21.23-11.28l-92.75,28.39L380.95827,221.60693l-92.75,28.4a17.0152,17.0152,0,0,0-11.28028,21.23l134.08008,437.93a17.02661,17.02661,0,0,0,16.26026,12.03,16.78926,16.78926,0,0,0,4.96972-.75l63.58008-19.46,2-.62v-2.09l-2,.61-64.16992,19.65a15.01489,15.01489,0,0,1-18.73-9.95l-134.06983-437.94a14.97935,14.97935,0,0,1,9.94971-18.73l92.75-28.4,191.24024-58.54,92.75-28.4a15.15551,15.15551,0,0,1,4.40966-.66,15.01461,15.01461,0,0,1,14.32032,10.61l39.0498,127.56.62012,2h2.08008Z\" transform=\"translate(-276.18187 -133.91309)\" fill=\"#3f3d56\" /><path d=\"M398.86279,261.73389a9.0157,9.0157,0,0,1-8.61133-6.3667l-12.88037-42.07178a8.99884,8.99884,0,0,1,5.9712-11.24023l175.939-53.86377a9.00867,9.00867,0,0,1,11.24072,5.9707l12.88037,42.07227a9.01029,9.01029,0,0,1-5.9707,11.24072L401.49219,261.33887A8.976,8.976,0,0,1,398.86279,261.73389Z\" transform=\"translate(-276.18187 -133.91309)\" fill={Constant.accentColor} /><circle cx=\"190.15351\" cy=\"24.95465\" r={20} fill={Constant.accentColor} /><circle cx=\"190.15351\" cy=\"24.95465\" r=\"12.66462\" fill=\"#fff\" /><path d=\"M878.81836,716.08691h-338a8.50981,8.50981,0,0,1-8.5-8.5v-405a8.50951,8.50951,0,0,1,8.5-8.5h338a8.50982,8.50982,0,0,1,8.5,8.5v405A8.51013,8.51013,0,0,1,878.81836,716.08691Z\" transform=\"translate(-276.18187 -133.91309)\" fill=\"#e6e6e6\" /><path d=\"M723.31813,274.08691h-210.5a17.02411,17.02411,0,0,0-17,17v407.8l2-.61v-407.19a15.01828,15.01828,0,0,1,15-15H723.93825Zm183.5,0h-394a17.02411,17.02411,0,0,0-17,17v458a17.0241,17.0241,0,0,0,17,17h394a17.0241,17.0241,0,0,0,17-17v-458A17.02411,17.02411,0,0,0,906.81813,274.08691Zm15,475a15.01828,15.01828,0,0,1-15,15h-394a15.01828,15.01828,0,0,1-15-15v-458a15.01828,15.01828,0,0,1,15-15h394a15.01828,15.01828,0,0,1,15,15Z\" transform=\"translate(-276.18187 -133.91309)\" fill=\"#3f3d56\" /><path d=\"M801.81836,318.08691h-184a9.01015,9.01015,0,0,1-9-9v-44a9.01016,9.01016,0,0,1,9-9h184a9.01016,9.01016,0,0,1,9,9v44A9.01015,9.01015,0,0,1,801.81836,318.08691Z\" transform=\"translate(-276.18187 -133.91309)\" fill={Constant.accentColor} /><circle cx=\"433.63626\" cy=\"105.17383\" r={20} fill={Constant.accentColor} /><circle cx=\"433.63626\" cy=\"105.17383\" r=\"12.18187\" fill=\"#fff\" /></svg>\n                                        <h4 className=\"text-muted\">Not found history</h4>\n                                    </div>\n                                ) : null}\n\n\n\n                                {this.state.results.length == 0 && this.state.histories.data.length >= 1 ? (\n                                    <div>\n                                        <table class=\"table table-striped table-hover\">\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">Title project</th>\n                                                    <th scope=\"col\">Template version</th>\n                                                    <th scope=\"col\">Platform</th>\n                                                    <th scope=\"col\">Crud type</th>\n                                                    <th scope=\"col\">Created at</th>\n                                                    <th scope=\"col\">Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.histories.data.map((data, index) => (\n                                                    <tr key={index}>\n                                                        <td scope=\"row\">{index + 1}</td>\n                                                        <td>{data.titleProject}</td>\n                                                        <td>{data.templateVersion}</td>\n                                                        <td>{data.platform}</td>\n                                                        <td>{data.crudType}</td>\n                                                        <td>{data.createdAt.seconds}</td>\n                                                        <td><button className=\"btn btn-dark\" onClick={e => this.handleStartCanvas(true, data.payload)}>Preview</button></td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                ) : ''}\n\n                                <div id=\"fragment-preview\"></div>\n\n\n\n                                {this.state.isLoadingGeneratedResults && <div class=\"text-center\">\n                                    <div class=\"spinner-border\" role=\"status\">\n                                        <span class=\"visually-hidden\">Loading...</span>\n                                    </div>\n                                    <h5 className=\"mt-1\">Generating code...</h5>\n                                </div>\n                                }\n\n                                {this.state.projectCanvas['platform'] !== undefined &&\n                                    <div>\n                                        {this.renderCanvasFromState()}\n\n                                        <div className=\"mt-5\"></div>\n                                        <br /><br /><br /><br /><br />\n                                        <hr />\n\n                                        {/* <h3>Main Logic</h3> */}\n                                        {/* {this.generateLogicFromState()} */}\n\n                                        {/* <h3>View</h3> */}\n                                        {/* {this.generateViewFromState()} */}\n                                        {/* <textarea name=\"asd\" id=\"asd\" className=\"form-control\" value={this.state.blueprintFormHtmlString} rows={10} cols={30}></textarea> */}\n\n                                        <h3>Final result {`(${this.state.results.length} file)`}</h3>\n\n                                        <div class=\"alert alert-warning\" role=\"alert\">\n                                            Generated code isn't pretty, please prettier your code manually\n                                        </div>\n\n                                        {this.renderFinalResults()}\n                                    </div>\n                                }\n\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* <footer className=\"footer footer-transparent d-print-none\">\n          <div className=\"container-xl\">\n            <div className=\"row text-center align-items-center flex-row-reverse\">\n              <div className=\"col-12 col-lg-auto mt-3 mt-lg-0\">\n                <ul className=\"list-inline list-inline-dots mb-0\">\n                  <li className=\"list-inline-item\">\n                    Copyright &copy; 2023\n                    <a href=\".\" className=\"link-secondary\">Tabler</a>.\n                    All rights reserved.\n                  </li>\n                  <li className=\"list-inline-item\">\n                    <a href=\"./changelog.html\" className=\"link-secondary\" rel=\"noopener\">\n                      v1.0.0-beta19\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </footer> */}\n\n                    <div className=\"modal modal-blur fade\" id=\"modal-create-project\" tabIndex={\"-1\"} role=\"dialog\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog modal-lg\" role=\"document\">\n                            <div className=\"modal-content\">\n                                <form id=\"form-create_project\">\n                                    <div className=\"modal-header\">\n                                        <h5 className=\"modal-title\">Create project</h5>\n                                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                        <label className=\"form-label\">Start with...</label>\n                                        <div className=\"form-selectgroup-boxes row mb-3\">\n                                            <div className=\"col-lg-6\">\n                                                <label className=\"form-selectgroup-item\" onClick={(e) => this.setState({ projectCanvas: { ...this.state.projectCanvas, createProjectFrom: 'ui_wizard' } })}>\n                                                    <input type=\"radio\" name=\"report-type\" value=\"1\" className=\"form-selectgroup-input\" />\n                                                    <span className=\"form-selectgroup-label d-flex align-items-center p-3\">\n                                                        <span className=\"me-3\">\n                                                            <span className=\"form-selectgroup-check\"></span>\n                                                        </span>\n                                                        <span className=\"form-selectgroup-label-content\">\n                                                            <span className=\"form-selectgroup-title strong mb-1\">Simple</span>\n                                                            <span className=\"d-block text-muted\">Create form and page using UI</span>\n                                                        </span>\n                                                    </span>\n                                                </label>\n                                            </div>\n                                            <div className=\"col-lg-6\">\n                                                <label className=\"form-selectgroup-item\" onClick={(e) => this.setState({ projectCanvas: { ...this.state.projectCanvas, createProjectFrom: 'import_file' } })}>\n                                                    <input type=\"radio\" name=\"report-type\" value=\"1\" className=\"form-selectgroup-input\" />\n                                                    <span className=\"form-selectgroup-label d-flex align-items-center p-3\">\n                                                        <span className=\"me-3\">\n                                                            <span className=\"form-selectgroup-check\"></span>\n                                                        </span>\n                                                        <span className=\"form-selectgroup-label-content\">\n                                                            <span className=\"form-selectgroup-title strong mb-1\">Advanced (file)</span>\n                                                            <span className=\"d-block text-muted\">Create form and page using JSON File template</span>\n                                                        </span>\n                                                    </span>\n                                                </label>\n                                            </div>\n                                            <div className=\"col-lg-6\">\n                                                <label className=\"form-selectgroup-item\" onClick={(e) => this.setState({ projectCanvas: { ...this.state.projectCanvas, createProjectFrom: 'import_text' } })}>\n                                                    <input type=\"radio\" name=\"report-type\" value=\"1\" className=\"form-selectgroup-input\" />\n                                                    <span className=\"form-selectgroup-label d-flex align-items-center p-3\">\n                                                        <span className=\"me-3\">\n                                                            <span className=\"form-selectgroup-check\"></span>\n                                                        </span>\n                                                        <span className=\"form-selectgroup-label-content\">\n                                                            <span className=\"form-selectgroup-title strong mb-1\">Advanced (text)</span>\n                                                            <span className=\"d-block text-muted\">Create form and page using JSON text template</span>\n                                                        </span>\n                                                    </span>\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                        <div className=\"row\">\n                                            {this.state.projectCanvas.createProjectFrom === 'import_text' && (\n\n                                                <div className=\"col-lg-12\">\n                                                    <a className=\"btn btn-outline-info mb-3\" href={SampleProjectCanvasTemplateJson} download=\"sample-project-canvas-template-json.json\"><i class=\"bi bi-filetype-json me-2\"></i> Download sample data JSON</a>\n\n                                                    <div>\n                                                        <label className=\"form-label\">Paste your JSON template here</label>\n                                                        <textarea id=\"create-import_text\" className=\"form-control\" rows=\"3\"></textarea>\n                                                    </div>\n                                                </div>\n                                            )}\n\n                                            {this.state.projectCanvas.createProjectFrom === 'import_file' && (\n                                                <div className=\"col-lg-12\">\n                                                    <div>\n                                                        <label className=\"form-label\">Import your JSON file here</label>\n                                                        <input type=\"file\" className=\"form-control\" id=\"create-import_file\" accept=\".json\" />\n                                                    </div>\n                                                </div>\n                                            )}\n\n                                        </div>\n                                    </div>\n                                    <div className=\"modal-footer\">\n                                        <a href=\"#\" className=\"btn btn-link link-secondary\" data-bs-dismiss=\"modal\">\n                                            Cancel\n                                        </a>\n                                        <a href=\"#\" className=\"btn btn-primary ms-auto\" id=\"btn-create-fragment\" onClick={e => this.handleStartCanvas()}>{this.state.loadingGeneratedResults}</a>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {this.state.results.length >= 1 ? (<div class=\"position-relative\">\n                    <div class=\"position-absolute bottom-0 end-0 me-4 mb-4\">\n                        <button className=\"btn btn-lg btn-secondary rounded-pill\" onClick={e => this.handleEndCanvas()}><i class=\"bi bi-x-lg me-2\"></i> End this session</button>\n                    </div>\n                </div>) : null}\n\n\n            </PanelLayout>\n        )\n    }\n}\n\n// function generateCanvas() {\n//     let psudoRow = document.querySelector('.pseudo-row')\n\n//     if (psudoRow != null) {\n//         psudoRow.addEventListener('click', function (e) {\n//             psudoRow.classList.add('active')\n//         })\n//     }\n\n//     let previewFragment = document.querySelector('#fragment-preview')\n//     let btnCreateFragment = document.querySelector('#btn-create-fragment')\n\n//     let formJSON = {\n//         elements: [\n//             {\n//                 label: 'Nama lengkap',\n//                 tag: 'input',\n//                 attributes: {\n//                     type: 'text',\n//                     class: 'form-control',\n//                     id: 'add-nama',\n//                     name: 'nama',\n//                     placeholder: 'Nama lengkap...',\n//                     disabled: false,\n//                     readonly: false,\n//                     autofocus: true\n//                 }\n//             },\n//             {\n//                 label: 'Alamat email',\n//                 tag: 'input',\n//                 attributes: {\n//                     type: 'email',\n//                     class: 'form-control',\n//                     id: 'add-email',\n//                     name: 'email',\n//                     placeholder: 'Email valid...',\n//                     disabled: false,\n//                     readonly: false,\n//                     autofocus: false\n//                 }\n//             },\n//             {\n//                 label: 'Password',\n//                 tag: 'input',\n//                 attributes: {\n//                     type: 'password',\n//                     class: 'form-control',\n//                     id: 'add-password',\n//                     name: 'password',\n//                     placeholder: 'Password...',\n//                     disabled: true,\n//                     readonly: true,\n//                     autofocus: false\n//                 }\n//             },\n//             // {\n//             //     label: 'Foto',\n//             //     tag: 'input',\n//             //     attributes: {\n//             //         type: 'file',\n//             //         class: 'form-control',\n//             //         id: 'add-file',\n//             //         name: 'file'\n//             //     }\n//             // },\n//             {\n//                 label: 'Jenis kelamin',\n//                 tag: 'select',\n//                 options: [\n//                     {\n//                         label: 'Pilih jenis kelamin',\n//                         value: '',\n//                         selected: true,\n//                         disabled: true\n//                     },\n//                     {\n//                         label: 'Laki-laki',\n//                         value: 'male',\n//                     },\n//                     {\n//                         label: 'Perempuan',\n//                         value: 'female'\n//                     },\n//                 ],\n//                 attributes: {\n//                     class: 'form-select',\n//                     id: 'add-jenis_kelamin',\n//                     name: 'jenis_kelamin',\n//                     disabled: false,\n//                     readonly: false,\n//                 }\n//             },\n//         ]\n//     }\n\n//     btnCreateFragment.addEventListener('click', () => {\n\n//         let cardTemplater = function (element) {\n//             return `<div className=\"card\">\n//                                         <div className=\"card-body\">\n//                                             ${element}\n//                                         </div>\n//                                     </div>`\n//         }\n\n//         let piece = ''\n//         let explodingToColumn = 12 / formJSON.elements.length\n\n//         if (formJSON.elements.length > 1) {\n//             piece += '<div className=\"row pseudo-row\">'\n//             piece += '<div className=\"pseudo-row-button\" style=\"display: none;\"><button className=\"btn btn-sm btn-primary\">Tambah</button> <button className=\"btn btn-sm btn-info\">Edit</button> <button className=\"btn btn-sm btn-danger\">Hapus</button></div> <br><br>'\n//         }\n\n//         formJSON.elements.forEach(elm => {\n//             piece += `<div className=\"form-group ${formJSON.elements.length > 1 ? '' : 'pseudo-row'} ${formJSON.elements.length > 1 ? 'col-md-' + explodingToColumn : ''} mb-3\">`\n//             piece += `<label className=\"mb-1\" for=\"${elm.attributes.id}\">${elm.label}</label>`\n\n//             if (elm.tag != 'select') {\n//                 piece += `<${elm.tag}`\n//                 piece += ` ${elm.attributes.type} `\n\n//                 for (const key in elm.attributes) {\n//                     if (elm.attributes.hasOwnProperty(key)) {\n//                         if ((typeof elm.attributes[key]) != \"boolean\") {\n//                             piece += ` ${key}=\"${elm.attributes[key]}\"`\n//                         } else {\n//                             if (elm.attributes[key]) {\n//                                 piece += ` ${key}=\"${elm.attributes[key]}\"`\n//                             } else {\n//                                 piece += ``\n//                             }\n//                         }\n//                     }\n//                 }\n\n//                 piece += `>`\n//             } else {\n//                 piece += `<${elm.tag}`\n//                 for (const key in elm.attributes) {\n//                     if (elm.attributes.hasOwnProperty(key)) {\n//                         if ((typeof elm.attributes[key]) != \"boolean\") {\n//                             piece += ` ${key}=\"${elm.attributes[key]}\"`\n//                         } else {\n//                             if (elm.attributes[key]) {\n//                                 piece += ` ${key}=\"${elm.attributes[key]}\"`\n//                             } else {\n//                                 piece += ``\n//                             }\n//                         }\n//                     }\n//                 }\n//                 piece += `>`\n\n//                 // option generate\n//                 let options = ''\n//                 elm.options.forEach(opt => {\n//                     let option = `<option value=\"${opt.value}\" ${opt.hasOwnProperty('selected') ? 'selected' : ''} ${opt.hasOwnProperty('disabled') ? 'disabled' : ''}>${opt.label}</option>`\n\n//                     // for (const key in opt) {\n//                     //     if (opt.hasOwnProperty(key)) {\n//                     //         option += ` value=\"${opt.value}\"`\n//                     //         option += ` ${key}=\"${opt[key]}\"`\n//                     //     }\n//                     // }\n\n//                     options += option\n//                 })\n\n//                 piece += options\n//                 piece += `</${elm.tag}>`\n//             }\n\n//             piece += '</div>'\n\n//             // piece += `<button className=\"btn btn-outline-primary\">+ Tambah element</button>`\n//         })\n\n//         if (formJSON.elements.length > 1) {\n//             piece += '</div>'\n\n//             // piece += `<button className=\"btn btn-outline-primary\">+ Tambah element</button>`\n//         }\n//         previewFragment.innerHTML += cardTemplater(piece)\n//         // previewFragment.insertAdjacentHTML('beforeend', `<button className=\"btn btn-outline-primary\">+ Tambah element</button>`)\n//         document.querySelector('.card-body').insertAdjacentHTML('afterbegin', `<div className=\"row p-3\"><button className=\"btn btn-outline-dark\">+ Tambah element</button></row>`)\n//         document.querySelector('.card-body').insertAdjacentHTML('beforeend', `<div className=\"row p-3\"><button className=\"btn btn-outline-dark\">+ Tambah element</button></row>`)\n//         // document.querySelector('.card-body').innerHTML += `<button className=\"btn btn-sm btn-primary ms-3\">+ Tambah element</button>`\n\n//         // previewFragment.innerHTML += cardTemplater(`\n//         // <div className=\"mb-3\">\n//         //                   <label className=\"form-label\">Text</label>\n//         //                   <input type=\"text\" className=\"form-control\" name=\"example-text-input\" placeholder=\"Input placeholder\">\n//         //                 </div>\n//         // `)\n\n//         // previewFragment.innerHTML += `<h1>${new Date()}</h1>`\n\n//         psudoRow = document.querySelector('.pseudo-row')\n//         psudoRow.addEventListener('click', function (e) {\n//             psudoRow.classList.add('active')\n//         })\n\n//         document.getElementsByClassName('pseudo-row')[0].addEventListener('mouseenter', function () {\n//             document.getElementsByClassName('pseudo-row-button')[0].style.display = \"block\"\n//         })\n\n//         document.getElementsByClassName('pseudo-row')[0].addEventListener('mouseleave', function () {\n//             document.getElementsByClassName('pseudo-row-button')[0].style.display = \"none\"\n//         })\n//     })\n\n//     // btn-add-input\n\n//     // setTimeout(() => {\n//     //     [].forEach.call(document.getElementsByClassName('pseudo-row-button'), function (el) {\n//     //         el.style.display = 'none';\n//     //     });\n//     // }, 5000);\n\n\n// }\n\nexport default ProjectCanvas;\n\n"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","UrlHelper","urlWrapper","url","this","basename","Credentials","set","data","localStorage","setItem","get","JSON","parse","getItem","Constant","credentialKey","clear","removeItem","PanelLayout","props","showModalCredential","setShowModalCredential","useState","signOutLoading","setSignOutLoading","CardCredential","styled","div","_jsx","children","_jsxs","class","type","href","src","process","width","alt","appName","target","rel","xmlns","height","viewBox","stroke","fill","d","title","tabindex","style","id","className","onClick","handleShowModalCredential","fullname","organization","Link","to","Modal","show","onHide","handleCloseModalCredential","Header","Title","email","Body","Footer","Button","variant","handleSignOut","setTimeout","window","location","ProjectCanvas","Component","constructor","super","copyCode","code","e","copy","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","alert","state","errorMessage","isLoadingGeneratedResults","loadingGeneratedResults","results","projectCanvas","createProjectFrom","blueprintFormHtmlString","histories","isLoading","handleImportProjectTemplate","bind","handleStartCanvas","renderCanvasFromState","undefined","blueprints","blueprintForm","totalRow","length","generateX","elm","dynamicAttributes","key","attributes","hasOwnProperty","tag","options","map","opt","label","blp","explodingToColumn","Math","round","display","for","index","name","generatePureHtmlFromState","crudType","inputs","flat","generateModal","headerTitle","footerTitle","buttonStyle","modalHtmlString","ReactDOMServer","setState","prevState","fileName","description","language","indexHtmlString","generateIndexPage","finalResult","generateColumn","result","input","orderable","generateScript","datatable","generateLogicFromState","generateValidation","fieldAssignRules","validation","rules","mainLogic","hasFileExist","storePath","hasFile","titleProject","generateIndex","generateDatatables","toLowerCase","uploadFile","generateCreateData","deleteFile","generateUpdateData","generateFilename","platform","componentDidMount","fragmentMakeMeAwesome","fetchHistory","console","log","database","getFirestore","firebaseConf","getDocs","query","collection","where","userId","then","snapshot","snapshotHistories","docs","push","newHistories","sendDatAnalytic","addHistory","addDoc","templateVersion","payload","stringify","createdAt","Date","updatedAt","documentId","historiesDocId","updateDoc","doc","count","error","isPreview","sourcePreview","sourceTemplate","message","fragmentGeneratingResult","querySelector","value","click","getElementById","files","reader","FileReader","readAsText","onload","onerror","handleEndCanvas","confirm","resetCanvas","reset","renderFinalResults","piece","htmlFor","SyntaxHighlighter","solarizedlight","showLineNumbers","typePattern","text","renderHistoriesRow","render","_Fragment","strokeWidth","strokeLinecap","strokeLinejoin","role","marginTop","xmlnsXlink","transform","accentColor","cx","cy","r","scope","seconds","tabIndex","SampleProjectCanvasTemplateJson","download","rows","accept"],"sourceRoot":""}